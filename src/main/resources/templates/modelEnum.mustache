{{!
  Source: openapi-to-java-records-mustache-templates
  Version: 1.8.1

  Required mustache templates (generation will fail without them):
    - `deprecation.mustache`
    - `javadoc.mustache`
    - `additionalEnumTypeAnnotations.mustache` (Official)

}}{{>javadoc}}{{>deprecation}}{{>additionalEnumTypeAnnotations}}{{!
}}public enum {{classname}} {
  {{#allowableValues}}{{#enumVars}}{{{name}}}({{{value}}}){{^-last}},
  {{/-last}}{{#-last}};{{/-last}}{{/enumVars}}{{/allowableValues}}

  private final {{{dataType}}} value;

  {{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}}(final {{{dataType}}} value) {
    this.value = value;
  }

  public {{{dataType}}} getValue() {
    return value;
  }
  {{#useEnumCaseInsensitive}}

  /**
   * Case-insensitively parses the given string to an enum with a matching value.
   *
   * @param value of the Enum
   * @return a {@link {{classname}} } with the matching value
   * @throws IllegalArgumentException if no enum has a value matching the string
   */
  public static {{classname}} fromValue(final String value) {
    for (final {{classname}} b : {{classname}}.values()) {
      if (b.getValue().equalsIgnoreCase(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
{{/useEnumCaseInsensitive}}
}