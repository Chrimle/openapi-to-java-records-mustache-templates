/*
 * Example OpenAPI Spec.
 * An example OpenAPI-spec to generate example Java records.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * This class was generated using custom mustache templates from
 * openapi-to-java-records-mustache-templates. For further information,
 * questions, requesting features or reporting issues, please visit:
 * https://github.com/Chrimle/openapi-to-java-records-mustache-templates.
 * Generated with Version: 2.9.5
 *
 */

package io.github.chrimle.o2jrm.webclient.serializableModel;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.chrimle.o2jrm.webclient.serializableModel.ExampleEnum;
import io.github.chrimle.o2jrm.webclient.serializableModel.ExampleRecord;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Example of a Record with fields of each type
 *
 * @param field1 a Boolean field
 * @param field2 a String field
 * @param field3 an Integer field
 * @param field4 a Number field
 * @param field5 an Array of Boolean field
 * @param field6 a Set field
 * @param field7 ExampleRecord.
 * @param field8 ExampleEnum.
 */
public record RecordWithRequiredFieldsOfEachType(
     Boolean field1,
     String field2,
     Integer field3,
     BigDecimal field4,
     List<Boolean> field5,
     Set<Boolean> field6,
     ExampleRecord field7,
     ExampleEnum field8)
    implements Serializable {

  public RecordWithRequiredFieldsOfEachType(
      final Boolean field1,
      final String field2,
      final Integer field3,
      final BigDecimal field4,
      final List<Boolean> field5,
      final Set<Boolean> field6,
      final ExampleRecord field7,
      final ExampleEnum field8) {
    this.field1 = field1;
    this.field2 = field2;
    this.field3 = field3;
    this.field4 = field4;
    this.field5 = Objects.requireNonNullElse(field5, new ArrayList<>());
    this.field6 = Objects.requireNonNullElse(field6, new LinkedHashSet<>());
    this.field7 = field7;
    this.field8 = field8;
  }
}
