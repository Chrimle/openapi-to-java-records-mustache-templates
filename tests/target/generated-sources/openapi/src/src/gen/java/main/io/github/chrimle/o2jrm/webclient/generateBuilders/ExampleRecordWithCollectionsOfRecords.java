/*
 * Example OpenAPI Spec.
 * An example OpenAPI-spec to generate example Java records.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * This class was generated using custom mustache templates from
 * openapi-to-java-records-mustache-templates. For further information,
 * questions, requesting features or reporting issues, please visit:
 * https://github.com/Chrimle/openapi-to-java-records-mustache-templates.
 * Generated with Version: 2.9.5
 *
 */

package io.github.chrimle.o2jrm.webclient.generateBuilders;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.chrimle.o2jrm.webclient.generateBuilders.ExampleRecord;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Example of a Record with collections of records.
 *
 * @param optionalRecordList Optional field
 * @param requiredRecordList Required field
 * @param optionalRecordSet Another Optional field
 * @param requiredRecordSet Another required field
 */
public record ExampleRecordWithCollectionsOfRecords(
    @javax.annotation.Nonnull List<ExampleRecord> optionalRecordList,
    @javax.annotation.Nonnull List<ExampleRecord> requiredRecordList,
    @javax.annotation.Nonnull Set<ExampleRecord> optionalRecordSet,
    @javax.annotation.Nonnull Set<ExampleRecord> requiredRecordSet) {

  public ExampleRecordWithCollectionsOfRecords(
      @javax.annotation.Nullable final List<ExampleRecord> optionalRecordList,
      @javax.annotation.Nullable final List<ExampleRecord> requiredRecordList,
      @javax.annotation.Nullable final Set<ExampleRecord> optionalRecordSet,
      @javax.annotation.Nullable final Set<ExampleRecord> requiredRecordSet) {
    this.optionalRecordList = Objects.requireNonNullElse(optionalRecordList, new ArrayList<>());
    this.requiredRecordList = Objects.requireNonNullElse(requiredRecordList, new ArrayList<>());
    this.optionalRecordSet = Objects.requireNonNullElse(optionalRecordSet, new LinkedHashSet<>());
    this.requiredRecordSet = Objects.requireNonNullElse(requiredRecordSet, new LinkedHashSet<>());
  }

  /** Builder class for {@link ExampleRecordWithCollectionsOfRecords }. */
  public static class Builder {

    private List<ExampleRecord> optionalRecordList;
    private List<ExampleRecord> requiredRecordList;
    private Set<ExampleRecord> optionalRecordSet;
    private Set<ExampleRecord> requiredRecordSet;

    /**
     * Sets the value of {@link ExampleRecordWithCollectionsOfRecords#optionalRecordList }.
     *
     * <p><b>NOTE:</b> Pass-by-reference is used!
     *
     * @param optionalRecordList Optional field.
     * @return this {@link Builder}-instance for method-chaining.
     */
    public Builder optionalRecordList(final List<ExampleRecord> optionalRecordList) {
      this.optionalRecordList = optionalRecordList;
      return this;
    }

    /**
     * Sets the value of {@link ExampleRecordWithCollectionsOfRecords#requiredRecordList }.
     *
     * <p><b>NOTE:</b> Pass-by-reference is used!
     *
     * @param requiredRecordList Required field.
     * @return this {@link Builder}-instance for method-chaining.
     */
    public Builder requiredRecordList(final List<ExampleRecord> requiredRecordList) {
      this.requiredRecordList = requiredRecordList;
      return this;
    }

    /**
     * Sets the value of {@link ExampleRecordWithCollectionsOfRecords#optionalRecordSet }.
     *
     * <p><b>NOTE:</b> Pass-by-reference is used!
     *
     * @param optionalRecordSet Another Optional field.
     * @return this {@link Builder}-instance for method-chaining.
     */
    public Builder optionalRecordSet(final Set<ExampleRecord> optionalRecordSet) {
      this.optionalRecordSet = optionalRecordSet;
      return this;
    }

    /**
     * Sets the value of {@link ExampleRecordWithCollectionsOfRecords#requiredRecordSet }.
     *
     * <p><b>NOTE:</b> Pass-by-reference is used!
     *
     * @param requiredRecordSet Another required field.
     * @return this {@link Builder}-instance for method-chaining.
     */
    public Builder requiredRecordSet(final Set<ExampleRecord> requiredRecordSet) {
      this.requiredRecordSet = requiredRecordSet;
      return this;
    }

    /**
     * Builds a {@link ExampleRecordWithCollectionsOfRecords }-instance with the values provided in preceding
     * builder methods.
     *
     * <p><b>NOTE:</b> Pass-by-reference is used!
     *
     * @return a new {@link ExampleRecordWithCollectionsOfRecords }-instance.
     */
    public ExampleRecordWithCollectionsOfRecords build() {
      return new ExampleRecordWithCollectionsOfRecords(
          optionalRecordList,
          requiredRecordList,
          optionalRecordSet,
          requiredRecordSet);
    }
  }

  /** Creates a new {@link Builder}-instance. */
  public static ExampleRecordWithCollectionsOfRecords.Builder builder() {
    return new ExampleRecordWithCollectionsOfRecords.Builder();
  }
}
