{{!
   Copyright 2024-2025 Chrimle

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

}}{{!
  Source: openapi-to-java-records-mustache-templates
  Version: ${project.version}
  Type: Custom
  Dependencies:
    - none
  Dependents:
    - `pojo.mustache`
  Additional Context:
    - Enabled via configOptions.generateBuilders=true
    - Generates a `Builder`-class, intended to be an inner class of a `record`-class.

}}{{#generateBuilders}}

  /** Builder class for {@link {{classname}} }. */
  public static class Builder {

    {{#vars}}
    private {{{datatypeWithEnum}}} {{name}};
    {{/vars}}
    {{#vars}}

    /**
     * Sets the value of {@link {{classname}}#{{name}} }.
     *
     * <p><b>NOTE:</b> Pass-by-reference is used!
     *
     * @param {{name}} {{description}}{{^description}}sets the value of {{name}}{{/description}}.
     * @return this {@link Builder}-instance for method-chaining.
     */
    public Builder {{name}}(final {{{datatypeWithEnum}}} {{name}}) {
      this.{{name}} = {{name}};
      return this;
    }
    {{/vars}}

    /**
     * Builds a {@link {{classname}} }-instance with the values provided in preceding
     * builder methods.
     *
     * <p><b>NOTE:</b> Pass-by-reference is used!
     *
     * @return a new {@link {{classname}} }-instance.
     */
    public {{classname}} build() {
      return new {{classname}}(
        {{#vars}}{{name}}{{^-last}},
        {{/-last}}{{/vars}}
      );
    }
  }

  /** Creates a new {@link Builder}-instance. */
  public static {{classname}}.Builder builder() {
    return new {{classname}}.Builder();
  }{{!
}}{{/generateBuilders}}